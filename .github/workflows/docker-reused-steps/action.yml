name: Reusable docker workflow

description: Reusable docker workflow.

inputs:
  DOCKERHUB_USERNAME:
    required: true
  DOCKERHUB_TOKEN:
    required: true
  QUAY_USERNAME:
    required: true
  QUAY_TOKEN:
    required: true
  tag:
    required: true

runs:
  using: composite
  steps:
    - name: Docker meta:${{ inputs.tag }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.DOCKERHUB_USERNAME }}/twitcasting-recorder,ghcr.io/${{ github.repository_owner }}/twitcasting-recorder,quay.io/${{ github.repository_owner }}/twitcasting-recorder
        tags: |
          ${{ inputs.tag }}
          latest

    - name: Docker meta:${{ inputs.tag }}-ubi
      id: meta-ubi
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.DOCKERHUB_USERNAME }}/twitcasting-recorder,ghcr.io/${{ github.repository_owner }}/twitcasting-recorder,quay.io/${{ github.repository_owner }}/twitcasting-recorder
        tags: |
          type=raw,value=ubi

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Create a Access Token and save it as as Actions secret
    # https://hub.docker.com/settings/security
    # DOCKERHUB_USERNAME
    # DOCKERHUB_TOKEN
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKERHUB_USERNAME }}
        password: ${{ inputs.DOCKERHUB_TOKEN }}

    # You may need to manage write and read access of GitHub Actions for repositories in the container settings.
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Login to Quay Container Registry
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ inputs.QUAY_USERNAME }}
        password: ${{ inputs.QUAY_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        target: final
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ inputs.tag }}
          RELEASE=${{ github.run_number }}
        platforms: linux/amd64,linux/arm64
        # Cache to regietry instead of gha to avoid the capacity limit.
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/twitcasting-recorder:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/twitcasting-recorder:cache,mode=max
        sbom: true
        provenance: true

    - name: Build and push:UBI
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./ubi.Dockerfile
        push: true
        target: final
        tags: ${{ steps.meta-ubi.outputs.tags }}
        labels: ${{ steps.meta-ubi.outputs.labels }}
        build-args: |
          VERSION=${{ inputs.tag }}
          RELEASE=${{ github.run_number }}
        platforms: linux/amd64,linux/arm64
        # Cache to regietry instead of gha to avoid the capacity limit.
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/twitcasting-recorder:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/twitcasting-recorder:cache,mode=max
        sbom: true
        provenance: true
